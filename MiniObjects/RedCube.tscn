[gd_scene load_steps=5 format=2]

[sub_resource type="CubeMesh" id=1]

[sub_resource type="VisualShaderNodeColorOp" id=4]
default_input_values = [ 0, Vector3( 255, 0, 0 ), 1, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShader" id=2]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// ColorOp:2
	vec3 n_in2p0 = vec3(255.00000, 0.00000, 0.00000);
	vec3 n_in2p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out2p0 = vec3(1.0) - (vec3(1.0) - n_in2p0) * (vec3(1.0) - n_in2p1);

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -160, 61 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( 63, 190 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )

[node name="MeshInstance" type="MeshInstance"]
transform = Transform( 0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 3 )
